# -*- coding: utf-8 -*-
"""FILES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A2iuTAo7poa8BFKX4iaw-Iaok2JjY35J
"""

#Write a program to read characters from a text file.

# opens the file add.txt in read mode    
# f = open("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/files.txt",'r')

# print('the file contemts are:\n')
# str = f.read()
# print(str)

# f.close() #close the file

#Write a program to read characters from a text file.

# opens the file add.txt in read mode    
# f= open("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/files.txt",'r')

# print('the file contents are:')
# str = f.read(2) #This will read four bytes of file
# print(str)

# f.close() #close the file

# #write a program to create a text file to store individual characters.

# f=open("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/files.txt",'w') #open file for writing the data

# str=input("enter text:") #enter char from keyboard

# f.write(str) #write string into file

# f.close() #close the file

# #prev. data lost, to retain the previous data + add new data, open file in append mode

# f=open("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/files.txt",'a') #open file for writing the data

# str=input("enter text: \n") #enter char from keyboard

# f.write("\n"+str) #write string into file

# f.close() #close the file

# #Using write along with the with() function
# # Python code to illustrate with() to open a file and write some string into the file

# with open("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/files.txt",'w') as f:
  # f.write("i am a learner\n")

# #A program to use with to open a file and read data from it
# #using with open the file
# with open("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/files.txt",'r') as f:
#   for line in f:
#     print(line)

# #binary files handle data in the form of bytes.
# #open a binary file for reading purpose use rb - b attached to r to represent the binary

# #A python program to copy an image file into another file.
# #open files in binary mode
# f1=open('C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/doc1.jpg','rb')
# f2=open('C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/new_Doc1.jpg','wb')

# # #read bytes from f1 and write in to f2
# byts=f1.read()
# f2.write(byts)

# f1.close()
# f2.close()

# #check if file exist or not
import os
# if os.path.exists("C:/Users/amanc/Desktop/Adv_python_Prac/ADV.PYTHON CODE/"):
#   os.remove("files.txt")
# else:
#   print("The file does not exist")

# #os module has submodule name path, method isfile
# #example os.path.isfile(fname)
# import os,sys

# fname = input("enter file name: ")

# if os.path.isfile(fname):
#   f=open("fname",'r')
# else:
#   print(fname+'doesnot exist')
#   sys.exit()

#   #read strings from the file
#   print("the file contents are :")
#   str=f.read()
#   print(str)

# #close the file
#   f.close()

# #By default the read() method returns the whole text, but you can also specify how many characters you want to return
# #You can return one line by using the readline() method:

# f = open("/content/myfile.txt", "r")
# print(f.readline())

# # Python program to demonstrate
# # seek() method #syntax f.seek(offset,from where)

# # Opening "myfile.txt" text file
# f = open("/content/myfile.txt", "r")
# # Second parameter is by default 0
# # sets Reference point to twentieth
# # index position from the beginning
# f.seek(5,0)
# # prints current position
# print(f.tell())
# print(f.readline())
# f.close()

# #method splits the data into lines and returns a list object. 

# with open("/content/myfile.txt",'r') as data_file:
#     for line in data_file:
#         #data = line.split()
#         #print(data)
#         data1 = line.splitlines()
#         print(data1)

# f = open("/content/myfile.txt", "w")

# #enter string from keyboard
# print("enter a text(@ at the end):")

# while str!= '@':
#   str = input() #acceopt the string

#   if(str != '@'):  #write string into the file
#     f.write(str +"\n")

# f.close()